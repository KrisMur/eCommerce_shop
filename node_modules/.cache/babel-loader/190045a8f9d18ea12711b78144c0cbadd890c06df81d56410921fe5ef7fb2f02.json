{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cartItems',\n  initialState: [],\n  reducers: {\n    addItem: (state, action) => {\n      const addedItem = {\n        id: action.payload.id,\n        title: action.payload.item,\n        qwt: 1\n      };\n      console;\n      if (state.length === 0) {\n        state.push(addedItem);\n      } else {\n        state.map((el, index) => {\n          if (el.id === addedItem.id) {\n            let countQwt = el['qwt'] + addedItem['qwt'];\n            console.log(el.id);\n            console.log(addedItem.id);\n            console.log(countQwt);\n            let newEl = {\n              ...el,\n              qwt: countQwt\n            };\n            console.log(newEl);\n            let test = state.splice(index, 1, newEl);\n            console.log(test);\n            return state.splice(index, 1, newEl);\n            // el['qwt']= countQwt;\n          } else {\n            return state.push(addedItem);\n          }\n        });\n      }\n    }\n  }\n});\nexport const {\n  addItem\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","reducers","addItem","state","action","addedItem","id","payload","title","item","qwt","console","length","push","map","el","index","countQwt","log","newEl","test","splice","actions","reducer"],"sources":["C:/1/eCommerce_shop/src/redux/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst cartSlice = createSlice({\n  name : 'cartItems',\n  initialState : [],\n  reducers: {\n    addItem: (state, action) => {\n      const addedItem = {\n        id: action.payload.id,\n        title: action.payload.item,\n        qwt : 1,\n      }\n\n      console\n  \n      if (state.length === 0) {\n        state.push(addedItem);\n      } else {\n        state.map((el,index) => {\n          if (el.id === addedItem.id) {\n            let countQwt = el['qwt'] + addedItem['qwt']\n            console.log(el.id)\n            console.log(addedItem.id)\n            console.log(countQwt)\n\n            let newEl = { ...el, qwt: countQwt}\n            console.log(newEl)\n\n            let test = state.splice(index, 1, newEl);\n            console.log(test)\n\n\n            return state.splice(index, 1, newEl);\n            // el['qwt']= countQwt;\n          } else {\n            return state.push(addedItem);\n          }\n        })\n      }\n    }\n  }\n})\n\nexport const { addItem } = cartSlice.actions;\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAG,WAAW;EAClBC,YAAY,EAAG,EAAE;EACjBC,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAMC,SAAS,GAAG;QAChBC,EAAE,EAAEF,MAAM,CAACG,OAAO,CAACD,EAAE;QACrBE,KAAK,EAAEJ,MAAM,CAACG,OAAO,CAACE,IAAI;QAC1BC,GAAG,EAAG;MACR,CAAC;MAEDC,OAAO;MAEP,IAAIR,KAAK,CAACS,MAAM,KAAK,CAAC,EAAE;QACtBT,KAAK,CAACU,IAAI,CAACR,SAAS,CAAC;MACvB,CAAC,MAAM;QACLF,KAAK,CAACW,GAAG,CAAC,CAACC,EAAE,EAACC,KAAK,KAAK;UACtB,IAAID,EAAE,CAACT,EAAE,KAAKD,SAAS,CAACC,EAAE,EAAE;YAC1B,IAAIW,QAAQ,GAAGF,EAAE,CAAC,KAAK,CAAC,GAAGV,SAAS,CAAC,KAAK,CAAC;YAC3CM,OAAO,CAACO,GAAG,CAACH,EAAE,CAACT,EAAE,CAAC;YAClBK,OAAO,CAACO,GAAG,CAACb,SAAS,CAACC,EAAE,CAAC;YACzBK,OAAO,CAACO,GAAG,CAACD,QAAQ,CAAC;YAErB,IAAIE,KAAK,GAAG;cAAE,GAAGJ,EAAE;cAAEL,GAAG,EAAEO;YAAQ,CAAC;YACnCN,OAAO,CAACO,GAAG,CAACC,KAAK,CAAC;YAElB,IAAIC,IAAI,GAAGjB,KAAK,CAACkB,MAAM,CAACL,KAAK,EAAE,CAAC,EAAEG,KAAK,CAAC;YACxCR,OAAO,CAACO,GAAG,CAACE,IAAI,CAAC;YAGjB,OAAOjB,KAAK,CAACkB,MAAM,CAACL,KAAK,EAAE,CAAC,EAAEG,KAAK,CAAC;YACpC;UACF,CAAC,MAAM;YACL,OAAOhB,KAAK,CAACU,IAAI,CAACR,SAAS,CAAC;UAC9B;QACF,CAAC,CAAC;MACJ;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH;AAAQ,CAAC,GAAGJ,SAAS,CAACwB,OAAO;AAC5C,eAAexB,SAAS,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}